name: Build

on:
  - push
  - workflow_dispatch

jobs:
  base:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build and publish base to ghcr.io
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: macbre/push-to-ghcr@master
        with:
          image_name: ${{ github.repository_owner }}/fn-base
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: "base/Dockerfile.base"
          image_tag: latest
          context: base

      - name: Build and publish builder to ghcr.io
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: macbre/push-to-ghcr@master
        with:
          image_name: ${{ github.repository_owner }}/fn-builder
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: "base/Dockerfile.builder"
          image_tag: latest
          context: base

  functions:
    runs-on: ubuntu-latest

    needs:
      - base

    strategy:
      matrix:
        function:
          - hass-listener
          - backup-stats-collector
          - time-passed
          - notifier
          - dummy

    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/${{ matrix.function }}/function/Gemfile

    steps:
      - uses: actions/checkout@v2

      - uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: "Europe/Berlin"

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run linter
        run: |
          cd ${{ github.workspace }}/${{ matrix.function }}/function
          bundle exec rubocop

      - name: Run tests
        run: |
          cd ${{ github.workspace }}/${{ matrix.function }}/function
          bundle exec rspec

      - name: Replace symlinks with originals
        run: |
          for f in $(find . -type l)
          do
              cp --remove-destination $(readlink -e $f) $f
          done

      - name: Build and publish to ghcr.io
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: macbre/push-to-ghcr@master
        with:
          image_name: ${{ github.repository_owner }}/fn-${{ matrix.function }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: "${{ matrix.function }}/Dockerfile"
          image_tag: latest
          context: ${{ matrix.function }}

      # TODO: deploy
